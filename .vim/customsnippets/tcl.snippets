
snippet #!
	#!/usr/bin/env tclsh

endsnippet
snippet pro
	proc ${1:function_name} {${2:args}} {
		${0}
	}

endsnippet
snippet xif
	${1:expr}? ${2:true} : ${0:false}

endsnippet
snippet if
	if {${1}} {
		${0}
	}

endsnippet
snippet ife
	if {${1}} {
		${2}
	} else {
		${0:# else...}
	}

endsnippet
snippet eif
	elseif {${1}} {
		${0}
	}

endsnippet
snippet ifee
	if {${1}} {
		${2}
	} elseif {${3}} {
		${4:# elsif...}
	} else {
		${0:# else...}
	}

endsnippet
snippet ifc
	if { [catch {${1:#do something...}} ${2:err}] } {
		${0:# handle failure...}
	}

endsnippet
snippet catch
	catch {${1}} ${2:err} ${0:options}

endsnippet
snippet wh
	while {${1}} {
		${0}
	}

endsnippet
snippet for
	for {set ${2:var} 0} {$$2 < ${1:count}} {${3:incr} $2} {
		${0}
	}

endsnippet
snippet fore
	foreach ${1:x} {${2:#list}} {
		${0}
	}

endsnippet
snippet af
	after ${1:ms} ${0:#do something}

endsnippet
snippet afc
	after cancel ${0:id or script}

endsnippet
snippet afi
	after idle ${0:script}

endsnippet
snippet afin
	after info ${0:id}

endsnippet
snippet exp
	expr {${0:#expression here}}

endsnippet
snippet sw
	switch ${1:var} {
		${3:pattern 1} {
			${0:#do something}
		}
		default {
			${2:#do something}
		}
	}
endsnippet
snippet ca
	${1:pattern} {
		${2:#do something}
	}
endsnippet
snippet ns
	namespace eval ${1:path} {${0:#script...}}
endsnippet
snippet nsc
	namespace current
endsnippet
priority -50

###########################################################################
#                            TEXTMATE SNIPPETS                            #
###########################################################################
snippet for "for... (for)" b
for {${1:set i 0}} {${2:\$i < \$n}} {${3:incr i}} {
	$4
}

endsnippet

snippet foreach "foreach... (foreach)"
foreach ${1:var} ${2:\$list} {
	$3
}

endsnippet

snippet if "if... (if)" b
if {${1:condition}} {
	$2
}

endsnippet

snippet proc "proc... (proc)" b
proc ${1:name} {${2:args}} \
{
	$3
}

endsnippet

snippet switch "switch... (switch)" b
switch ${1:-exact} -- ${2:\$var} {
	${3:match} {
		$4
	}
	default {$5}
}

endsnippet

snippet while "while... (while)" b
while {${1:condition}} {
	$2
}

endsnippet

# vim:ft=snippets:
