
snippet if "if"
	if ${1}
		${0}
	end

endsnippet
snippet ife "if "... else
	if ${1}
		${2}
	else
		${0}
	end

endsnippet
snippet el "else"
	else
		${0}
endsnippet
snippet eif "elsif"
	elseif ${1}
		${0}

endsnippet
snippet wh "while"
	while ${1}
		${0}
	end

endsnippet
snippet for "for"
	for ${1:i} = ${2:1:n}
		${0}
	end

endsnippet
snippet parfor "parfor"
	parfor ${1:i} = ${2:1:n}
		${0}
	end

endsnippet
snippet fun "function"
	function [${3:out}] = ${1:`vim_snippets#Filename("$1", "fun_name")`}(${2}) 
	${0}
endsnippet
snippet try "try "... catch
	try
		${1}
	catch ${2:err}
		${0}
	end
endsnippet
snippet switch "switch"
	switch ${1:n}
		case ${2:0}
			${0}
	end

endsnippet
snippet @ anonymous function
	@(${1:x}) ${0:x*x}

endsnippet
snippet cl "class "
	classdef ${1:`vim_snippets#Filename("$1", "class_name")`}
	   properties
		  ${2}
	   end
	   methods
		  ${0}
	   end
	end
endsnippet
priority -50

snippet switch "switch ... otherwise"
switch ${1:n}
	case ${2:0}
		${3}${4:
	otherwise
		${5}}
end
endsnippet

snippet clc "class with constructor" b
classdef ${1:`!p
snip.rv = snip.basename or "class_name"`} 
	properties
		${2}
	end
	methods
		function obj = $1(${3})
			${4}
		end${0}
	end
end
endsnippet
